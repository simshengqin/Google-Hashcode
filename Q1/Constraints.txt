Key to reduce complexities:
Create a pre defined list of the different combinations
Use sets, dictionary
Put creation of list outside of for loops
Minimise operations that require O(n) or higher in loops

There are between 2 to 4 people(inclusive) in a team
Need to be equal or fewer deliveries than the number of teams (Both total and each of the 2, 3 or 4 person team
each pizza is used for at most one order
for a team, either noone or everybody receives a pizza
Goal is to maximise the number of ingredients delivered to each teams

5 1 2 1
3 onion pepper olive
3 mushroom tomato basil
3 chicken mushroom p epper
3 tomato mushroom basil
2 chicken basil
5 pizzas, 1 team of two, 2 teams of three, and 1 team of four
Pizza 0 has the given 3 i ngredients
Pizza 1 has the given 3 i ngredients
Pizza 2 has the given 3 i ngredients
Pizza 3 has the given 3 ingredients
Pizza 4 has the given 2 i ngredients

Steps:
Read and understand problem. Highlight key details such as the constraints
Write the constraints in constraints.txt
Create the input file
Create the source code file, ensure that it can read input file properly
Create the pseudocode

Pseudocode:
Loop through all the pizzas 3 times. Start from combinations of 2 pizzas, create a list of tuples, where the tuple contains the total number of unique ingredients (1st element) and another inner tuple of the pizza indexes. Sort by the total number of unique ingredients in descending order. Repeat for combinations of 3 and 4 pizzas. Eg ((7,(0,2,3)),(5,(1,3,5))). 
                                                                                     

